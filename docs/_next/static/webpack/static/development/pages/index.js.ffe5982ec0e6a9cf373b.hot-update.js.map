{"version":3,"file":"static/webpack/static/development/pages/index.js.ffe5982ec0e6a9cf373b.hot-update.js","sources":["webpack:///./components/shopping-cart.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Fab from \"@material-ui/core/Fab\";\n\nimport Badge from \"@material-ui/core/Badge\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { GlobalContext } from \"../context/global\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { Paper, IconButton, TableFooter } from \"@material-ui/core\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst useStyles = makeStyles((theme) => ({\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 9,\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  table: {\n    width: \"100%\",\n  },\n}));\n\nexport default ({}) => {\n  const classes = useStyles();\n  const { state } = React.useContext(GlobalContext);\n\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <Badge\n      className={classes.fab}\n      badgeContent={state.cart.items.length}\n      color=\"error\"\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"left\",\n      }}\n    >\n      <Modal\n        className={classes.modal}\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\">Shopping Cart</Typography>\n\n          <TableContainer component={Paper} className={classes.table}>\n            <Table size=\"small\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Item</TableCell>\n                  <TableCell align=\"right\">Price</TableCell>\n                  <TableCell align=\"right\">Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {state.cart.items.map((item) => {\n                  return (\n                    <TableRow key={item.name}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {item.name}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        Â£{item.abv.toFixed(2)}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <IconButton>\n                          <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n              <TableFooter>\n                <TableRow>\n                  <TableCell rowSpan={3} />\n                  <TableCell colSpan={2}>Subtotal</TableCell>\n                  <TableCell align=\"right\">\n                    {state.cart.items\n                      .map((i) => i.abv)\n                      .reduce((acc, cur) => (acc += parseFloat(cur, 10)), 0)\n                      .toFixed(2)}\n                  </TableCell>\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </TableContainer>\n        </Paper>\n      </Modal>\n\n      <Fab onClick={() => setOpen(true)} hidden={!open}>\n        <ShoppingBasketIcon />\n      </Fab>\n    </Badge>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAlBA;AAAA;AAuBA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}